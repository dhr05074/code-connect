openapi: "3.0.0"
info:
    version: "0.1.0"
    title: "CodeConnect"
    description: "CodeConnect API"
servers:
    - url: "https://api.codeconnect.io"
paths:
    /problems:
        post:
            summary: "Create a problem."
            operationId: "createProblem"
            description: |
                Create a question by inputting work, required skills, preferences, and experience.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - difficulty
                                - language
                            properties:
                                difficulty:
                                    type: integer
                                    description: "Difficulty of the problem out of 100."
                                    example: 20
                                language:
                                    type: string
                                    description: "Language of the problem."
                                    example: "python"
            responses:
                "202":
                    description: "Problem creation request is accepted. You can get the problem ID from the response."
                    content:
                        application/json:
                            schema:
                                required:
                                    - request_id
                                properties:
                                    request_id:
                                        $ref: "#/components/schemas/request_id"
                "400":
                    description: "Required content is missing, or the wrong data type has been sent."
                    content:
                        application/json:
                            schema:
                                required:
                                    - message
                                properties:
                                    message:
                                        type: string
                                        description: "Error message"
                                        example: "`id` field is required"
                default:
                    description: "Unexpected error"
    /problems/{request_id}:
        parameters:
            - name: request_id
              in: path
              required: true
              description: "ID of the problem creation request"
              schema:
                $ref: "#/components/schemas/request_id"
        get:
            summary: "Get a problem."
            operationId: "getProblem"
            description: |
                Search the created problem using the request code issued when creating the problem.
            responses:
                "200":
                    description: "Problem is found."
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - problem
                                properties:
                                    problem:
                                        $ref: "#/components/schemas/problem"
    /evaluate:
        post:
            summary: "Evaluate a candidate's solution."
            operationId: "evaluateSolution"
            description: |
                Evaluate a candidate's solution by inputting the problem ID and the candidate's solution.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - problem_id
                                - before
                                - after
                            properties:
                                problem_id:
                                    $ref: "#/components/schemas/problem_id"
                                before:
                                    type: string
                                    description: "Candidate's solution before the change."
                                    example: "def add(a, b):\n    return a + b"
                                after:
                                    type: string
                                    description: "Candidate's solution after the change."
                                    example: "def add(a, b):\n    return a + b + 1"
            responses:
                "200":
                    description: "Evaluation is successful."
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - score
                                properties:
                                    score:
                                        type: string
                                        description: "Score of the solution out of 100."
                default:
                    description: "Unexpected error"
components:
    schemas:
        request_id:
            type: string
            description: This ID is given upon request. This ID allows the requested resource to be returned.
            example: 7a283d
        problem_id:
            type: string
            description: ID of the problem.
            example: 7a283d
        problem:
            type: object
            description: This is the problem that is returned.
            properties:
                problem_id:
                    $ref: "#/components/schemas/problem_id"
                title:
                    type: string
                    description: Title of the problem.
                    example: "Create a website"
                content:
                    type: string
                    description: Content of the problem.
                    example: "Create a website that allows users to upload images."
            required:
                - problem_id
                - title
                - content
