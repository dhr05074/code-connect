openapi: 3.0.3
info:
  title: Developic API
  description: Developic 서비스에서 사용하는 REST API 입니다.
  version: 1.0.0
servers:
  - url: 'https://api.developic.kr'
security:
  - apiKey: [ ]
components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: X-API-KEY
      in: header
  requestBodies:
    SubmitCode:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              problem_id:
                $ref: "#/components/schemas/ProblemID"
              code:
                $ref: "#/components/schemas/Code"
            required:
              - problem_id
              - code
  responses:
    200GetProblem:
      description: 문제가 성공적으로 생성된 상태입니다.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem"
    202Submit:
      description: 문제 채점 요청이 성공적으로 접수된 상태입니다. 시스템에서 채점을 시작합니다.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              record_id:
                $ref: "#/components/schemas/RecordID"
            required:
              - record_id
    200GetRecords:
      description: 성공적으로 채점 결과를 조회한 경우입니다.
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - records
            properties:
              records:
                type: array
                minItems: 0
                maxItems: 100
                items:
                  $ref: "#/components/schemas/Record"
    200GetRecord:
      description: 채점 보고서가 생성되었으며, 성공적으로 조회한 상태입니다.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Record"
    InternalServerError:
      description: 내부 서버 오류입니다. 오류 코드와 함께 반환됩니다.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      additionalProperties: false
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: "오류 구분 코드입니다."
          example: "4c4d3b2a"
        message:
          type: string
          description: "상세한 오류 정보를 알려주는 메시지입니다."
          example: "you don't have the permission to access this resource"
    ELOScore:
      type: integer
      format: int32
      minimum: 0
      maximum: 3000
      description: Developic에서 유저의 실력을 가늠하는 ELO 점수입니다.
    ProgrammingLanguage:
      type: string
      description: Developic에서 사용할 프로그래밍 언어입니다.
      enum:
        - Go
        - Javascript
        - Cpp
      default: "Go"
    Problem:
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/ProblemID"
        title:
          $ref: "#/components/schemas/ProblemTitle"
        description:
          type: string
          description: 문제의 자세한 설명입니다.
          example: |
            문제 설명입니다.
            이 문제는 이렇게 풀면 됩니다.
        code:
          $ref: "#/components/schemas/Code"
      required:
        - id
        - title
        - description
        - code
    ProblemID:
      type: string
      description: Developic에서 출제한 문제의 고유 ID입니다.
      example: 1a2b3c4d
      maxLength: 8
    ProblemTitle:
      type: string
      description: Developic에서 출제한 문제의 타이틀입니다.
      example: 중첩된 If문 없애기
    RecordID:
      type: string
      description: Developic에서 생성된 결과 보고서의 고유 ID입니다.
      example: 1a2b3c4d
      maxLength: 8
    Record:
      type: object
      required:
        - id
        - problem_id
        - problem_title
        - efficiency
        - readability
        - robustness
        - code
      properties:
        id:
          $ref: "#/components/schemas/RecordID"
        problem_id:
          $ref: "#/components/schemas/ProblemID"
        problem_title:
          $ref: "#/components/schemas/ProblemTitle"
        efficiency:
          $ref: "#/components/schemas/Score"
        readability:
          $ref: "#/components/schemas/Score"
        robustness:
          $ref: "#/components/schemas/Score"
        code:
          $ref: "#/components/schemas/Code"
    Score:
      type: integer
      format: int32
      description: 결과 보고서에서 사용자가 취득한 총점입니다.
      minimum: 0
      maximum: 100
      example: 85
    Code:
      type: string
      description: |
        Developic에서 사용되는 코드 데이터입니다.
        코드 데이터의 Escape를 방지하기 위해 Base64로 인코딩되어 전송, 보관됩니다.
      example: 7J6s7ZmY7J207ZiVIOuwlOuztA==
paths:
  /problems:
    post:
      operationId: requestProblem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - language
              properties:
                language:
                  $ref: "#/components/schemas/ProgrammingLanguage"
                elo_score:
                  $ref: "#/components/schemas/ELOScore"
      responses:
        202:
          description: 문제 생성 요청이 성공적으로 접수되었으며, 시스템에서 문제를 생성중인 상태입니다.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - problem_id
                properties:
                  problem_id:
                    $ref: "#/components/schemas/ProblemID"
        default:
          $ref: "#/components/responses/InternalServerError"
  /problems/{id}:
    parameters:
      - in: path
        name: id
        description: 문제 생성 시 발급받은 ID입니다.
        required: true
        schema:
          $ref: "#/components/schemas/ProblemID"
    get:
      operationId: getProblem
      responses:
        200:
          $ref: "#/components/responses/200GetProblem"
        404:
          description: 존재하지 않는 문제 ID를 입력한 상태입니다.
        409:
          description: 문제 생성이 접수되었으나, 시스템에서 아직 문제 생성이 완료되지 않은 상태입니다.
        default:
          $ref: "#/components/responses/InternalServerError"
  /submit:
    post:
      operationId: submitSolution
      requestBody:
        $ref: "#/components/requestBodies/SubmitCode"
      responses:
        202:
          $ref: "#/components/responses/202Submit"
        default:
          $ref: "#/components/responses/InternalServerError"
  /records/{id}:
    parameters:
      - in: path
        name: id
        description: 조회하고자 하는 채점 보고서의 ID입니다.
        required: true
        schema:
          $ref: "#/components/schemas/RecordID"
    get:
      operationId: getRecord
      description: 입력한 ID를 가진 채점 보고서를 조회합니다.
      responses:
        200:
          $ref: "#/components/responses/200GetRecord"
        404:
          description: 입력한 ID에 해당하는 채점 보고서가 없는 경우입니다.
        409:
          description: 입력한 ID에 해당하는 채점 보고서가 아직 완성되지 않은 경우입니다.
        default:
          $ref: "#/components/responses/InternalServerError"
  /records:
    get:
      operationId: getRecords
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            maximum: 1024
            format: int32
          description: 조회할 페이지입니다.
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
          description: 한 페이지당 조회할 아이템의 수입니다.
          example: 20
      responses:
        200:
          $ref: "#/components/responses/200GetRecords"
        default:
          $ref: "#/components/responses/InternalServerError"
  /me:
    get:
      operationId: getMe
      responses:
        200:
          description: 유저 자신의 정보를 불러오는 데 성공한 경우입니다.
          content:
            application/json:
              schema:
                type: object
                properties:
                  elo_score:
                    $ref: "#/components/schemas/ELOScore"
                required:
                  - elo_score
