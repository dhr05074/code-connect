// Code generated by ent, DO NOT EDIT.

package problem

import (
	"time"
)

const (
	// Label holds the string label denoting the problem type in the database.
	Label = "problem"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldDifficulty holds the string denoting the difficulty field in the database.
	FieldDifficulty = "difficulty"
	// FieldLanguage holds the string denoting the language field in the database.
	FieldLanguage = "language"
	// FieldStatement holds the string denoting the statement field in the database.
	FieldStatement = "statement"
	// FieldExamples holds the string denoting the examples field in the database.
	FieldExamples = "examples"
	// FieldConstraints holds the string denoting the constraints field in the database.
	FieldConstraints = "constraints"
	// FieldEvaluationCriteria holds the string denoting the evaluation_criteria field in the database.
	FieldEvaluationCriteria = "evaluation_criteria"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the problem in the database.
	Table = "problems"
)

// Columns holds all SQL columns for problem fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldDifficulty,
	FieldLanguage,
	FieldStatement,
	FieldExamples,
	FieldConstraints,
	FieldEvaluationCriteria,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
