// Code generated by ent, DO NOT EDIT.

package submission

const (
	// Label holds the string label denoting the submission type in the database.
	Label = "submission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldSubmitterID holds the string denoting the submitter_id field in the database.
	FieldSubmitterID = "submitter_id"
	// EdgeProblem holds the string denoting the problem edge name in mutations.
	EdgeProblem = "problem"
	// Table holds the table name of the submission in the database.
	Table = "submissions"
	// ProblemTable is the table that holds the problem relation/edge.
	ProblemTable = "submissions"
	// ProblemInverseTable is the table name for the Problem entity.
	// It exists in this package in order to avoid circular dependency with the "problem" package.
	ProblemInverseTable = "problems"
	// ProblemColumn is the table column denoting the problem relation/edge.
	ProblemColumn = "problem_submissions"
)

// Columns holds all SQL columns for submission fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCode,
	FieldSubmitterID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "submissions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"problem_submissions",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
