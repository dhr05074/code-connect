// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ProblemsColumns holds the columns for the "problems" table.
	ProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "difficulty", Type: field.TypeInt, Default: 1500},
		{Name: "readability", Type: field.TypeInt, Default: 0},
		{Name: "robustness", Type: field.TypeInt, Default: 0},
		{Name: "efficiency", Type: field.TypeInt, Default: 0},
	}
	// ProblemsTable holds the schema information for the "problems" table.
	ProblemsTable = &schema.Table{
		Name:       "problems",
		Columns:    ProblemsColumns,
		PrimaryKey: []*schema.Column{ProblemsColumns[0]},
	}
	// RecordsColumns holds the columns for the "records" table.
	RecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "user_uuid", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Size: 2147483647},
		{Name: "readability", Type: field.TypeInt, Default: 0},
		{Name: "robustness", Type: field.TypeInt, Default: 0},
		{Name: "efficiency", Type: field.TypeInt, Default: 0},
		{Name: "problem_records", Type: field.TypeInt},
	}
	// RecordsTable holds the schema information for the "records" table.
	RecordsTable = &schema.Table{
		Name:       "records",
		Columns:    RecordsColumns,
		PrimaryKey: []*schema.Column{RecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "records_problems_records",
				Columns:    []*schema.Column{RecordsColumns[7]},
				RefColumns: []*schema.Column{ProblemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString, Unique: true},
		{Name: "nickname", Type: field.TypeString},
		{Name: "elo_score", Type: field.TypeInt, Default: 1500},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ProblemsTable,
		RecordsTable,
		UsersTable,
	}
)

func init() {
	RecordsTable.ForeignKeys[0].RefTable = ProblemsTable
}
